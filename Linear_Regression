import matplotlib.pyplot as plt
import pandas as pd
import random

random.seed(100)
data = pd.read_csv('data(1).csv')
print(data)
print(data.describe())
X = data.iloc[:, [2,3]].values
x= X[:,0]
y= X[:,1]

plt.scatter(x,y)
plt.show()

from scipy import stats
slope, intercept, r, p, std_err = stats.linregress(x, y) #p-value = 0.05보다 작으면 통계적으로 유의 #기울기가 0이라는 가설을 기각
#slope: The slope of the regression line.
#intercept: The intercept of the regression line.
#r: The Pearson correlation coefficient. The square of rvalue is equal to the coefficient of determination.
#p: The p-value for a hypothesis test whose null hypothesis is that the slope is zero
#std_err: Standard error of the estimated slope (gradient), under the assumption of residual normality.

mymodel = slope * x + intercept

plt.scatter(x, y)
plt.plot(x, mymodel)
plt.show()

print(slope)
print(intercept)
print(r)
print(p)
print(std_err)
